# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import source.resource_pb2 as resource__pb2
import source.response_pb2 as response__pb2


class ResourceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createResource = channel.unary_unary(
                '/grpc.pmp.Resource/createResource',
                request_serializer=resource__pb2.CreateRequest.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.getResourceIDFromName = channel.unary_unary(
                '/grpc.pmp.Resource/getResourceIDFromName',
                request_serializer=resource__pb2.GetResourceIDReq.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.editResource = channel.unary_unary(
                '/grpc.pmp.Resource/editResource',
                request_serializer=resource__pb2.EditRequest.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.deleteResource = channel.unary_unary(
                '/grpc.pmp.Resource/deleteResource',
                request_serializer=resource__pb2.DeleteRequest.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.getResources = channel.unary_unary(
                '/grpc.pmp.Resource/getResources',
                request_serializer=resource__pb2.GetResourceRequest.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.getAllResourceTypes = channel.unary_unary(
                '/grpc.pmp.Resource/getAllResourceTypes',
                request_serializer=resource__pb2.ResourceTypes.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.getResIdAccId = channel.unary_unary(
                '/grpc.pmp.Resource/getResIdAccId',
                request_serializer=resource__pb2.ResourceIdAccountId.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.getResourceAccountList = channel.unary_unary(
                '/grpc.pmp.Resource/getResourceAccountList',
                request_serializer=resource__pb2.ResAccountList.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.getAccountAttributes = channel.unary_unary(
                '/grpc.pmp.Resource/getAccountAttributes',
                request_serializer=resource__pb2.AccountDetail.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.getPassword = channel.unary_unary(
                '/grpc.pmp.Resource/getPassword',
                request_serializer=resource__pb2.AccountPassword.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.createAccounts = channel.unary_unary(
                '/grpc.pmp.Resource/createAccounts',
                request_serializer=resource__pb2.CreateAccount.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.editAccount = channel.unary_unary(
                '/grpc.pmp.Resource/editAccount',
                request_serializer=resource__pb2.EditAccount.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )
        self.deleteAccount = channel.unary_unary(
                '/grpc.pmp.Resource/deleteAccount',
                request_serializer=resource__pb2.AccountDetail.SerializeToString,
                response_deserializer=response__pb2.ApiResponse.FromString,
                )


class ResourceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getResourceIDFromName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def editResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllResourceTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getResIdAccId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getResourceAccountList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAccountAttributes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def editAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createResource': grpc.unary_unary_rpc_method_handler(
                    servicer.createResource,
                    request_deserializer=resource__pb2.CreateRequest.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'getResourceIDFromName': grpc.unary_unary_rpc_method_handler(
                    servicer.getResourceIDFromName,
                    request_deserializer=resource__pb2.GetResourceIDReq.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'editResource': grpc.unary_unary_rpc_method_handler(
                    servicer.editResource,
                    request_deserializer=resource__pb2.EditRequest.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'deleteResource': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteResource,
                    request_deserializer=resource__pb2.DeleteRequest.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'getResources': grpc.unary_unary_rpc_method_handler(
                    servicer.getResources,
                    request_deserializer=resource__pb2.GetResourceRequest.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'getAllResourceTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllResourceTypes,
                    request_deserializer=resource__pb2.ResourceTypes.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'getResIdAccId': grpc.unary_unary_rpc_method_handler(
                    servicer.getResIdAccId,
                    request_deserializer=resource__pb2.ResourceIdAccountId.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'getResourceAccountList': grpc.unary_unary_rpc_method_handler(
                    servicer.getResourceAccountList,
                    request_deserializer=resource__pb2.ResAccountList.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'getAccountAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.getAccountAttributes,
                    request_deserializer=resource__pb2.AccountDetail.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'getPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.getPassword,
                    request_deserializer=resource__pb2.AccountPassword.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'createAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.createAccounts,
                    request_deserializer=resource__pb2.CreateAccount.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'editAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.editAccount,
                    request_deserializer=resource__pb2.EditAccount.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
            'deleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteAccount,
                    request_deserializer=resource__pb2.AccountDetail.FromString,
                    response_serializer=response__pb2.ApiResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.pmp.Resource', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Resource(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/createResource',
            resource__pb2.CreateRequest.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getResourceIDFromName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/getResourceIDFromName',
            resource__pb2.GetResourceIDReq.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def editResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/editResource',
            resource__pb2.EditRequest.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/deleteResource',
            resource__pb2.DeleteRequest.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/getResources',
            resource__pb2.GetResourceRequest.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllResourceTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/getAllResourceTypes',
            resource__pb2.ResourceTypes.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getResIdAccId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/getResIdAccId',
            resource__pb2.ResourceIdAccountId.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getResourceAccountList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/getResourceAccountList',
            resource__pb2.ResAccountList.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAccountAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/getAccountAttributes',
            resource__pb2.AccountDetail.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/getPassword',
            resource__pb2.AccountPassword.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/createAccounts',
            resource__pb2.CreateAccount.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def editAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/editAccount',
            resource__pb2.EditAccount.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.pmp.Resource/deleteAccount',
            resource__pb2.AccountDetail.SerializeToString,
            response__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
